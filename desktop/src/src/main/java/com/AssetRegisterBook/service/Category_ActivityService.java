package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.Category;

import com.AssetRegisterBook.dao.couchbase.Category_ActivityDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("Category_ActivityService")
public class Category_ActivityService   {
private static Logger log = Logger.getLogger(Category_ActivityService.class.getName());

	private Category_ActivityDao Category_Activity_dao;


	public Category_ActivityDao get_Category_Activity_dao() {
		return Category_Activity_dao;
	}


	@Resource(name="Category_ActivityDao")
	public void set_Category_Activity_dao(Category_ActivityDao Category_Activity_dao) {
		this.Category_Activity_dao = Category_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Category noun into database
	*@param Category
	*@param user
	*@return the_Category object will return
	*@throws Exception
	*/

	public Category create_category(Category Category) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_category service operation started !");

		try{
			Category the_Category;

			the_Category = Category_Activity_dao.create_category(Category);

 			log.info(" Object returned from create_category  service method !");
			return the_Category;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_category service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Category noun into database
	*@param Category
	*@param user
	*@return the_Category object will return
	*@throws Exception
	*/

	public Category update_category(Category Category) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_category service operation started !");

		try{
			Category the_Category;

			the_Category = Category_Activity_dao.update_category(Category);

 			log.info(" Object returned from update_category  service method !");
			return the_Category;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_category service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Category noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Category object will return
	*@throws Exception
	*/

	public Category category_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("category_search_for_update service operation started !");

		try{
			Category the_Category;

			the_Category = Category_Activity_dao.category_search_for_update(id);

 			log.info(" Object returned from category_search_for_update  service method !");
			return the_Category;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("category_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Category noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Category id deleted based on id
	*@throws Exception
	*/

	public String  delete_category(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_category service operation started !");

		try{
			String method_return_message;

			method_return_message = Category_Activity_dao.delete_category(id);

 			log.info(" Object returned from delete_category  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_category service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Category noun from  database
	*
	*
	*@return List of Category object will return
	*@throws Exception
	*/

	public ArrayList<Category> get_all_category() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Category> Category_list;

			Category_list = Category_Activity_dao.get_all_category();

 			log.info(" Object returned from   service method !");
			return Category_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}