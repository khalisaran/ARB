package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.UsedUs;

import com.AssetRegisterBook.dao.couchbase.UsedUs_ActivityDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("UsedUs_ActivityService")
public class UsedUs_ActivityService   {
private static Logger log = Logger.getLogger(UsedUs_ActivityService.class.getName());

	private UsedUs_ActivityDao UsedUs_Activity_dao;


	public UsedUs_ActivityDao get_UsedUs_Activity_dao() {
		return UsedUs_Activity_dao;
	}


	@Resource(name="UsedUs_ActivityDao")
	public void set_UsedUs_Activity_dao(UsedUs_ActivityDao UsedUs_Activity_dao) {
		this.UsedUs_Activity_dao = UsedUs_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  UsedUs noun into database
	*@param UsedUs
	*@param user
	*@return the_UsedUs object will return
	*@throws Exception
	*/

	public UsedUs create_usedus(UsedUs UsedUs) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_usedus service operation started !");

		try{
			UsedUs the_UsedUs;

			the_UsedUs = UsedUs_Activity_dao.create_usedus(UsedUs);

 			log.info(" Object returned from create_usedus  service method !");
			return the_UsedUs;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_usedus service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  UsedUs noun into database
	*@param UsedUs
	*@param user
	*@return the_UsedUs object will return
	*@throws Exception
	*/

	public UsedUs update_usedus(UsedUs UsedUs) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_usedus service operation started !");

		try{
			UsedUs the_UsedUs;

			the_UsedUs = UsedUs_Activity_dao.update_usedus(UsedUs);

 			log.info(" Object returned from update_usedus  service method !");
			return the_UsedUs;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_usedus service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  UsedUs noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_UsedUs object will return
	*@throws Exception
	*/

	public UsedUs usedus_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("usedus_search_for_update service operation started !");

		try{
			UsedUs the_UsedUs;

			the_UsedUs = UsedUs_Activity_dao.usedus_search_for_update(id);

 			log.info(" Object returned from usedus_search_for_update  service method !");
			return the_UsedUs;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("usedus_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  UsedUs noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_UsedUs id deleted based on id
	*@throws Exception
	*/

	public String  delete_usedus(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_usedus service operation started !");

		try{
			String method_return_message;

			method_return_message = UsedUs_Activity_dao.delete_usedus(id);

 			log.info(" Object returned from delete_usedus  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_usedus service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  UsedUs noun from  database
	*
	*
	*@return List of UsedUs object will return
	*@throws Exception
	*/

	public ArrayList<UsedUs> get_all_usedus() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<UsedUs> UsedUs_list;

			UsedUs_list = UsedUs_Activity_dao.get_all_usedus();

 			log.info(" Object returned from   service method !");
			return UsedUs_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}