package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.LNID;

import com.AssetRegisterBook.dao.couchbase.LNIDDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("LNIDService")
public class LNIDService   {
private static Logger log = Logger.getLogger(LNIDService.class.getName());

	private LNIDDao LNID_dao;


	public LNIDDao get_LNID_dao() {
		return LNID_dao;
	}


	@Resource(name="LNIDDao")
	public void set_LNID_dao(LNIDDao LNID_dao) {
		this.LNID_dao = LNID_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  LNID noun into database
	*@param LNID
	*@param user
	*@return the_LNID object will return
	*@throws Exception
	*/

	public LNID create_lnid(LNID LNID) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_lnid service operation started !");

		try{
			LNID the_LNID;

			the_LNID = LNID_dao.create_lnid(LNID);

 			log.info(" Object returned from create_lnid  service method !");
			return the_LNID;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_lnid service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  LNID noun into database
	*@param LNID
	*@param user
	*@return the_LNID object will return
	*@throws Exception
	*/

	public LNID update_lnid(LNID LNID) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_lnid service operation started !");

		try{
			LNID the_LNID;

			the_LNID = LNID_dao.update_lnid(LNID);

 			log.info(" Object returned from update_lnid  service method !");
			return the_LNID;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_lnid service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  LNID noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_LNID object will return
	*@throws Exception
	*/

	public LNID lnid_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("lnid_search_for_update service operation started !");

		try{
			LNID the_LNID;

			the_LNID = LNID_dao.lnid_search_for_update(id);

 			log.info(" Object returned from lnid_search_for_update  service method !");
			return the_LNID;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("lnid_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  LNID noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_LNID id deleted based on id
	*@throws Exception
	*/

	public String  delete_lnid(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_lnid service operation started !");

		try{
			String method_return_message;

			method_return_message = LNID_dao.delete_lnid(id);

 			log.info(" Object returned from delete_lnid  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_lnid service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  LNID noun from  database
	*
	*
	*@return List of LNID object will return
	*@throws Exception
	*/

	public ArrayList<LNID> get_all_lnid() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<LNID> LNID_list;

			LNID_list = LNID_dao.get_all_lnid();

 			log.info(" Object returned from   service method !");
			return LNID_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}