package com.AssetRegisterBook.domain.core;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Set;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.HashSet;

import com.couchbase.client.java.repository.annotation.Field;
import com.couchbase.client.java.repository.annotation.Id;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
 * build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC </br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/

@JsonIgnoreProperties(ignoreUnknown=true)
public class AsUser implements UserDetails {


	/**
	*
	* For now this class is only used to make the compile succeed
	* and therefore it is not meant to be used
	*
	* When you are ready this class should follow the same rules as any other
	* Noun to start it should contain the following fields:
	*
	* firstName, lastName. password, userid, email, and a list of Roles
	*
	* You should then allow the person using Geppetto to add more fields
	* to in the Noun editor -  Dan Castillo 01/28/2015
	*
	*
	*/

	public AsUser() {
		// TODO Auto-generated constructor stub
	}


	public AsUser(String firstName, String lastName) {
		super();
		this.firstName = firstName;
		this.lastName = lastName;
	}
	@Id
	private Long id = 0L;
	@Field
	private String firstName;
	@Field
	private String lastName;
	@Field
	private String middleName;
	@Field
	private String username;
	@Field
	private String password;
	@Field
	private String languagepreference;
	@Field
	private String primaryemail;
	@Field
	private String phonenumber;
	@Field
	private String screenname;  //used for display only
	@Field
	private String startdate;
	@Field
	private String licenseid;
	@Field
	private String lastaccess;
	@Field
	private String mustresetpassword;
	@Field
	private String accestype;		//used to disable access

    @Field
    private String newuser;  //typically used for registration

    @Field
    private String role;




	public String getRole() {
		return role;
	}


	public void setRole(String role) {
		this.role = role;
	}


	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}

	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}




	public String getMiddleName() {
		return middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getLanguagepreference() {
		return languagepreference;
	}

	public void setLanguagepreference(String languagepreference) {
		this.languagepreference = languagepreference;
	}

	public String getPrimaryemail() {
		return primaryemail;
	}

	public void setPrimaryemail(String primaryemail) {
		this.primaryemail = primaryemail;
	}

	public String getPhonenumber() {
		return phonenumber;
	}

	public void setPhonenumber(String phonenumber) {
		this.phonenumber = phonenumber;
	}

	public String getScreenname() {
		return screenname;
	}

	public void setScreenname(String screenname) {
		this.screenname = screenname;
	}

	public String getStartdate() {
		return startdate;
	}

	public void setStartdate(String startdate) {
		this.startdate = startdate;
	}

	public String getLicenseid() {
		return licenseid;
	}

	public void setLicenseid(String licenseid) {
		this.licenseid = licenseid;
	}

	public String getLastaccess() {
		return lastaccess;
	}

	public void setLastaccess(String lastaccess) {
		this.lastaccess = lastaccess;
	}

	public String getMustresetpassword() {
		return mustresetpassword;
	}

	public void setMustresetpassword(String mustresetpassword) {
		this.mustresetpassword = mustresetpassword;
	}

	public String getAccestype() {
		return accestype;
	}

	public void setAccestype(String accestype) {
		this.accestype = accestype;
	}


	public String isNewuser() {
		return newuser;
	}

	public void setNewuser(String newuser) {
		this.newuser = newuser;
	}


	@Override
	public Collection<GrantedAuthority> getAuthorities() {
		// TODO Auto-generated method stub
		 List<GrantedAuthority> list = new ArrayList<GrantedAuthority>();

       	  list.add(new SimpleGrantedAuthority(role));

       	  return list;
	}


	@Override
	public boolean isAccountNonExpired() {
		// TODO Auto-generated method stub
		return false;
	}


	@Override
	public boolean isAccountNonLocked() {
		// TODO Auto-generated method stub
		return false;
	}


	@Override
	public boolean isCredentialsNonExpired() {
		// TODO Auto-generated method stub
		return false;
	}


	@Override
	public boolean isEnabled() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public String toString() {
		return "LoUser [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", middleName=" + middleName
				+ ", username=" + username + ", password=" + password + ", languagepreference=" + languagepreference
				+ ", primaryemail=" + primaryemail + ", phonenumber=" + phonenumber + ", screenname=" + screenname
				+ ", startdate=" + startdate + ", licenseid=" + licenseid + ", lastaccess=" + lastaccess
				+ ", mustresetpassword=" + mustresetpassword + ", accestype=" + accestype + ", newuser=" + newuser
				+ ", role=" + role + "]";
	}





}