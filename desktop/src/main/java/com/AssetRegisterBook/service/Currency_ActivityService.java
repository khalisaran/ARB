package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.Currency;

import com.AssetRegisterBook.dao.couchbase.Currency_ActivityDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("Currency_ActivityService")
public class Currency_ActivityService   {
private static Logger log = Logger.getLogger(Currency_ActivityService.class.getName());

	private Currency_ActivityDao Currency_Activity_dao;


	public Currency_ActivityDao get_Currency_Activity_dao() {
		return Currency_Activity_dao;
	}


	@Resource(name="Currency_ActivityDao")
	public void set_Currency_Activity_dao(Currency_ActivityDao Currency_Activity_dao) {
		this.Currency_Activity_dao = Currency_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Currency noun into database
	*@param Currency
	*@param user
	*@return the_Currency object will return
	*@throws Exception
	*/

	public Currency create_currency(Currency Currency) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_currency service operation started !");

		try{
			Currency the_Currency;

			the_Currency = Currency_Activity_dao.create_currency(Currency);

 			log.info(" Object returned from create_currency  service method !");
			return the_Currency;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_currency service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Currency noun into database
	*@param Currency
	*@param user
	*@return the_Currency object will return
	*@throws Exception
	*/

	public Currency update_currency(Currency Currency) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_currency service operation started !");

		try{
			Currency the_Currency;

			the_Currency = Currency_Activity_dao.update_currency(Currency);

 			log.info(" Object returned from update_currency  service method !");
			return the_Currency;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_currency service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Currency noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Currency object will return
	*@throws Exception
	*/

	public Currency currency_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("currency_search_for_update service operation started !");

		try{
			Currency the_Currency;

			the_Currency = Currency_Activity_dao.currency_search_for_update(id);

 			log.info(" Object returned from currency_search_for_update  service method !");
			return the_Currency;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("currency_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Currency noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Currency id deleted based on id
	*@throws Exception
	*/

	public String  delete_currency(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_currency service operation started !");

		try{
			String method_return_message;

			method_return_message = Currency_Activity_dao.delete_currency(id);

 			log.info(" Object returned from delete_currency  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_currency service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Currency noun from  database
	*
	*
	*@return List of Currency object will return
	*@throws Exception
	*/

	public ArrayList<Currency> get_all_currency() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Currency> Currency_list;

			Currency_list = Currency_Activity_dao.get_all_currency();

 			log.info(" Object returned from   service method !");
			return Currency_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}