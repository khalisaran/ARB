package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.Type;

import com.AssetRegisterBook.dao.couchbase.Type_ActivityDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("Type_ActivityService")
public class Type_ActivityService   {
private static Logger log = Logger.getLogger(Type_ActivityService.class.getName());

	private Type_ActivityDao Type_Activity_dao;


	public Type_ActivityDao get_Type_Activity_dao() {
		return Type_Activity_dao;
	}


	@Resource(name="Type_ActivityDao")
	public void set_Type_Activity_dao(Type_ActivityDao Type_Activity_dao) {
		this.Type_Activity_dao = Type_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Type noun into database
	*@param Type
	*@param user
	*@return the_Type object will return
	*@throws Exception
	*/

	public Type create_type(Type Type) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_type service operation started !");

		try{
			Type the_Type;

			the_Type = Type_Activity_dao.create_type(Type);

 			log.info(" Object returned from create_type  service method !");
			return the_Type;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_type service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Type noun into database
	*@param Type
	*@param user
	*@return the_Type object will return
	*@throws Exception
	*/

	public Type update_type(Type Type) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_type service operation started !");

		try{
			Type the_Type;

			the_Type = Type_Activity_dao.update_type(Type);

 			log.info(" Object returned from update_type  service method !");
			return the_Type;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_type service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Type noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Type object will return
	*@throws Exception
	*/

	public Type type_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("type_search_for_update service operation started !");

		try{
			Type the_Type;

			the_Type = Type_Activity_dao.type_search_for_update(id);

 			log.info(" Object returned from type_search_for_update  service method !");
			return the_Type;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("type_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Type noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Type id deleted based on id
	*@throws Exception
	*/

	public String  delete_type(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_type service operation started !");

		try{
			String method_return_message;

			method_return_message = Type_Activity_dao.delete_type(id);

 			log.info(" Object returned from delete_type  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_type service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Type noun from  database
	*
	*
	*@return List of Type object will return
	*@throws Exception
	*/

	public ArrayList<Type> get_all_type() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Type> Type_list;

			Type_list = Type_Activity_dao.get_all_type();

 			log.info(" Object returned from   service method !");
			return Type_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}