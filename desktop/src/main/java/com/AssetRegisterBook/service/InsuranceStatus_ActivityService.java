package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.InsuranceStatus;

import com.AssetRegisterBook.dao.couchbase.InsuranceStatus_ActivityDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("InsuranceStatus_ActivityService")
public class InsuranceStatus_ActivityService   {
private static Logger log = Logger.getLogger(InsuranceStatus_ActivityService.class.getName());

	private InsuranceStatus_ActivityDao InsuranceStatus_Activity_dao;


	public InsuranceStatus_ActivityDao get_InsuranceStatus_Activity_dao() {
		return InsuranceStatus_Activity_dao;
	}


	@Resource(name="InsuranceStatus_ActivityDao")
	public void set_InsuranceStatus_Activity_dao(InsuranceStatus_ActivityDao InsuranceStatus_Activity_dao) {
		this.InsuranceStatus_Activity_dao = InsuranceStatus_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  InsuranceStatus noun into database
	*@param InsuranceStatus
	*@param user
	*@return the_InsuranceStatus object will return
	*@throws Exception
	*/

	public InsuranceStatus create_insurancestatus(InsuranceStatus InsuranceStatus) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_insurancestatus service operation started !");

		try{
			InsuranceStatus the_InsuranceStatus;

			the_InsuranceStatus = InsuranceStatus_Activity_dao.create_insurancestatus(InsuranceStatus);

 			log.info(" Object returned from create_insurancestatus  service method !");
			return the_InsuranceStatus;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_insurancestatus service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  InsuranceStatus noun into database
	*@param InsuranceStatus
	*@param user
	*@return the_InsuranceStatus object will return
	*@throws Exception
	*/

	public InsuranceStatus update_insurancestatus(InsuranceStatus InsuranceStatus) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_insurancestatus service operation started !");

		try{
			InsuranceStatus the_InsuranceStatus;

			the_InsuranceStatus = InsuranceStatus_Activity_dao.update_insurancestatus(InsuranceStatus);

 			log.info(" Object returned from update_insurancestatus  service method !");
			return the_InsuranceStatus;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_insurancestatus service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  InsuranceStatus noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_InsuranceStatus object will return
	*@throws Exception
	*/

	public InsuranceStatus insurancestatus_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("insurancestatus_search_for_update service operation started !");

		try{
			InsuranceStatus the_InsuranceStatus;

			the_InsuranceStatus = InsuranceStatus_Activity_dao.insurancestatus_search_for_update(id);

 			log.info(" Object returned from insurancestatus_search_for_update  service method !");
			return the_InsuranceStatus;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("insurancestatus_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  InsuranceStatus noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_InsuranceStatus id deleted based on id
	*@throws Exception
	*/

	public String  delete_insurancestatus(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_insurancestatus service operation started !");

		try{
			String method_return_message;

			method_return_message = InsuranceStatus_Activity_dao.delete_insurancestatus(id);

 			log.info(" Object returned from delete_insurancestatus  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_insurancestatus service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  InsuranceStatus noun from  database
	*
	*
	*@return List of InsuranceStatus object will return
	*@throws Exception
	*/

	public ArrayList<InsuranceStatus> get_all_insurancestatus() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<InsuranceStatus> InsuranceStatus_list;

			InsuranceStatus_list = InsuranceStatus_Activity_dao.get_all_insurancestatus();

 			log.info(" Object returned from   service method !");
			return InsuranceStatus_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}