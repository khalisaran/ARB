package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.Engineer;

import com.AssetRegisterBook.dao.couchbase.EngineerDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("EngineerService")
public class EngineerService   {
private static Logger log = Logger.getLogger(EngineerService.class.getName());

	private EngineerDao Engineer_dao;


	public EngineerDao get_Engineer_dao() {
		return Engineer_dao;
	}


	@Resource(name="EngineerDao")
	public void set_Engineer_dao(EngineerDao Engineer_dao) {
		this.Engineer_dao = Engineer_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Engineer noun into database
	*@param Engineer
	*@param user
	*@return the_Engineer object will return
	*@throws Exception
	*/

	public Engineer create_engineer(Engineer Engineer) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_engineer service operation started !");

		try{
			Engineer the_Engineer;

			the_Engineer = Engineer_dao.create_engineer(Engineer);

 			log.info(" Object returned from create_engineer  service method !");
			return the_Engineer;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_engineer service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Engineer noun into database
	*@param Engineer
	*@param user
	*@return the_Engineer object will return
	*@throws Exception
	*/

	public Engineer update_engineer(Engineer Engineer) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_engineer service operation started !");

		try{
			Engineer the_Engineer;

			the_Engineer = Engineer_dao.update_engineer(Engineer);

 			log.info(" Object returned from update_engineer  service method !");
			return the_Engineer;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_engineer service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Engineer noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Engineer object will return
	*@throws Exception
	*/

	public Engineer engineer_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("engineer_search_for_update service operation started !");

		try{
			Engineer the_Engineer;

			the_Engineer = Engineer_dao.engineer_search_for_update(id);

 			log.info(" Object returned from engineer_search_for_update  service method !");
			return the_Engineer;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("engineer_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Engineer noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Engineer id deleted based on id
	*@throws Exception
	*/

	public String  delete_engineer(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_engineer service operation started !");

		try{
			String method_return_message;

			method_return_message = Engineer_dao.delete_engineer(id);

 			log.info(" Object returned from delete_engineer  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_engineer service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Engineer noun from  database
	*
	*
	*@return List of Engineer object will return
	*@throws Exception
	*/

	public ArrayList<Engineer> get_all_engineer() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Engineer> Engineer_list;

			Engineer_list = Engineer_dao.get_all_engineer();

 			log.info(" Object returned from   service method !");
			return Engineer_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}