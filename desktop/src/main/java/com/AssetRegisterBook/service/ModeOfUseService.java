package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.ModeOfUse;

import com.AssetRegisterBook.dao.couchbase.ModeOfUseDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("ModeOfUseService")
public class ModeOfUseService   {
private static Logger log = Logger.getLogger(ModeOfUseService.class.getName());

	private ModeOfUseDao ModeOfUse_dao;


	public ModeOfUseDao get_ModeOfUse_dao() {
		return ModeOfUse_dao;
	}


	@Resource(name="ModeOfUseDao")
	public void set_ModeOfUse_dao(ModeOfUseDao ModeOfUse_dao) {
		this.ModeOfUse_dao = ModeOfUse_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  ModeOfUse noun into database
	*@param ModeOfUse
	*@param user
	*@return the_ModeOfUse object will return
	*@throws Exception
	*/

	public ModeOfUse create_modeofuse(ModeOfUse ModeOfUse) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_modeofuse service operation started !");

		try{
			ModeOfUse the_ModeOfUse;

			the_ModeOfUse = ModeOfUse_dao.create_modeofuse(ModeOfUse);

 			log.info(" Object returned from create_modeofuse  service method !");
			return the_ModeOfUse;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_modeofuse service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  ModeOfUse noun into database
	*@param ModeOfUse
	*@param user
	*@return the_ModeOfUse object will return
	*@throws Exception
	*/

	public ModeOfUse update_modeofuse(ModeOfUse ModeOfUse) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_modeofuse service operation started !");

		try{
			ModeOfUse the_ModeOfUse;

			the_ModeOfUse = ModeOfUse_dao.update_modeofuse(ModeOfUse);

 			log.info(" Object returned from update_modeofuse  service method !");
			return the_ModeOfUse;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_modeofuse service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  ModeOfUse noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_ModeOfUse object will return
	*@throws Exception
	*/

	public ModeOfUse modeofuse_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("modeofuse_search_for_update service operation started !");

		try{
			ModeOfUse the_ModeOfUse;

			the_ModeOfUse = ModeOfUse_dao.modeofuse_search_for_update(id);

 			log.info(" Object returned from modeofuse_search_for_update  service method !");
			return the_ModeOfUse;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("modeofuse_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  ModeOfUse noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_ModeOfUse id deleted based on id
	*@throws Exception
	*/

	public String  delete_modeofuse(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_modeofuse service operation started !");

		try{
			String method_return_message;

			method_return_message = ModeOfUse_dao.delete_modeofuse(id);

 			log.info(" Object returned from delete_modeofuse  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_modeofuse service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  ModeOfUse noun from  database
	*
	*
	*@return List of ModeOfUse object will return
	*@throws Exception
	*/

	public ArrayList<ModeOfUse> get_all_modeofuse() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<ModeOfUse> ModeOfUse_list;

			ModeOfUse_list = ModeOfUse_dao.get_all_modeofuse();

 			log.info(" Object returned from   service method !");
			return ModeOfUse_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}