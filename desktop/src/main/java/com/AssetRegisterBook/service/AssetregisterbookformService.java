package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.arb;

import com.AssetRegisterBook.dao.couchbase.AssetregisterbookformDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("AssetregisterbookformService")
public class AssetregisterbookformService   {
private static Logger log = Logger.getLogger(AssetregisterbookformService.class.getName());

	private AssetregisterbookformDao Assetregisterbookform_dao;


	public AssetregisterbookformDao get_Assetregisterbookform_dao() {
		return Assetregisterbookform_dao;
	}


	@Resource(name="AssetregisterbookformDao")
	public void set_Assetregisterbookform_dao(AssetregisterbookformDao Assetregisterbookform_dao) {
		this.Assetregisterbookform_dao = Assetregisterbookform_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Assetregisterbookform noun into database
	*@param Assetregisterbookform
	*@param user
	*@return the_Assetregisterbookform object will return
	*@throws Exception
	*/

	public arb create_assetregisterbookform(arb Assetregisterbookform) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_assetregisterbookform service operation started !");

		try{
			arb the_Assetregisterbookform;

			the_Assetregisterbookform = Assetregisterbookform_dao.create_assetregisterbookform(Assetregisterbookform);

 			log.info(" Object returned from create_assetregisterbookform  service method !");
			return the_Assetregisterbookform;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_assetregisterbookform service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Assetregisterbookform noun into database
	*@param Assetregisterbookform
	*@param user
	*@return the_Assetregisterbookform object will return
	*@throws Exception
	*/

	public arb update_assetregisterbookform(arb Assetregisterbookform) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_assetregisterbookform service operation started !");

		try{
			arb the_Assetregisterbookform;

			the_Assetregisterbookform = Assetregisterbookform_dao.update_assetregisterbookform(Assetregisterbookform);

 			log.info(" Object returned from update_assetregisterbookform  service method !");
			return the_Assetregisterbookform;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_assetregisterbookform service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Assetregisterbookform noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Assetregisterbookform object will return
	*@throws Exception
	*/

	public arb assetregisterbookform_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("assetregisterbookform_search_for_update service operation started !");

		try{
			arb the_Assetregisterbookform;

			the_Assetregisterbookform = Assetregisterbookform_dao.assetregisterbookform_search_for_update(id);

 			log.info(" Object returned from assetregisterbookform_search_for_update  service method !");
			return the_Assetregisterbookform;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("assetregisterbookform_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Assetregisterbookform noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Assetregisterbookform id deleted based on id
	*@throws Exception
	*/

	public String  delete_assetregisterbookform(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_assetregisterbookform service operation started !");

		try{
			String method_return_message;

			method_return_message = Assetregisterbookform_dao.delete_assetregisterbookform(id);

 			log.info(" Object returned from delete_assetregisterbookform  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_assetregisterbookform service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Assetregisterbookform noun from  database
	*
	*
	*@return List of Assetregisterbookform object will return
	*@throws Exception
	*/

	public ArrayList<arb> get_all_assetregisterbookform() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<arb> Assetregisterbookform_list;

			Assetregisterbookform_list = Assetregisterbookform_dao.get_all_assetregisterbookform();

 			log.info(" Object returned from   service method !");
			return Assetregisterbookform_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}