package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.Infra_own;

import com.AssetRegisterBook.dao.couchbase.Infra_own_Default_ActivityDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("Infra_own_Default_ActivityService")
public class Infra_own_Default_ActivityService   {
private static Logger log = Logger.getLogger(Infra_own_Default_ActivityService.class.getName());

	private Infra_own_Default_ActivityDao Infra_own_Default_Activity_dao;


	public Infra_own_Default_ActivityDao get_Infra_own_Default_Activity_dao() {
		return Infra_own_Default_Activity_dao;
	}


	@Resource(name="Infra_own_Default_ActivityDao")
	public void set_Infra_own_Default_Activity_dao(Infra_own_Default_ActivityDao Infra_own_Default_Activity_dao) {
		this.Infra_own_Default_Activity_dao = Infra_own_Default_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Infra_own noun into database
	*@param Infra_own
	*@param user
	*@return the_Infra_own object will return
	*@throws Exception
	*/

	public Infra_own create_infra_own(Infra_own Infra_own) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_infra_own service operation started !");

		try{
			Infra_own the_Infra_own;

			the_Infra_own = Infra_own_Default_Activity_dao.create_infra_own(Infra_own);

 			log.info(" Object returned from create_infra_own  service method !");
			return the_Infra_own;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_infra_own service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Infra_own noun into database
	*@param Infra_own
	*@param user
	*@return the_Infra_own object will return
	*@throws Exception
	*/

	public Infra_own update_infra_own(Infra_own Infra_own) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_infra_own service operation started !");

		try{
			Infra_own the_Infra_own;

			the_Infra_own = Infra_own_Default_Activity_dao.update_infra_own(Infra_own);

 			log.info(" Object returned from update_infra_own  service method !");
			return the_Infra_own;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_infra_own service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Infra_own noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Infra_own object will return
	*@throws Exception
	*/

	public Infra_own infra_own_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("infra_own_search_for_update service operation started !");

		try{
			Infra_own the_Infra_own;

			the_Infra_own = Infra_own_Default_Activity_dao.infra_own_search_for_update(id);

 			log.info(" Object returned from infra_own_search_for_update  service method !");
			return the_Infra_own;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("infra_own_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Infra_own noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Infra_own id deleted based on id
	*@throws Exception
	*/

	public String  delete_infra_own(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_infra_own service operation started !");

		try{
			String method_return_message;

			method_return_message = Infra_own_Default_Activity_dao.delete_infra_own(id);

 			log.info(" Object returned from delete_infra_own  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_infra_own service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Infra_own noun from  database
	*
	*
	*@return List of Infra_own object will return
	*@throws Exception
	*/

	public ArrayList<Infra_own> get_all_infra_own() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Infra_own> Infra_own_list;

			Infra_own_list = Infra_own_Default_Activity_dao.get_all_infra_own();

 			log.info(" Object returned from   service method !");
			return Infra_own_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}