package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.Purpose;

import com.AssetRegisterBook.dao.couchbase.Purpose_ActivityDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("Purpose_ActivityService")
public class Purpose_ActivityService   {
private static Logger log = Logger.getLogger(Purpose_ActivityService.class.getName());

	private Purpose_ActivityDao Purpose_Activity_dao;


	public Purpose_ActivityDao get_Purpose_Activity_dao() {
		return Purpose_Activity_dao;
	}


	@Resource(name="Purpose_ActivityDao")
	public void set_Purpose_Activity_dao(Purpose_ActivityDao Purpose_Activity_dao) {
		this.Purpose_Activity_dao = Purpose_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Purpose noun into database
	*@param Purpose
	*@param user
	*@return the_Purpose object will return
	*@throws Exception
	*/

	public Purpose create_purpose(Purpose Purpose) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_purpose service operation started !");

		try{
			Purpose the_Purpose;

			the_Purpose = Purpose_Activity_dao.create_purpose(Purpose);

 			log.info(" Object returned from create_purpose  service method !");
			return the_Purpose;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_purpose service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Purpose noun into database
	*@param Purpose
	*@param user
	*@return the_Purpose object will return
	*@throws Exception
	*/

	public Purpose update_purpose(Purpose Purpose) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_purpose service operation started !");

		try{
			Purpose the_Purpose;

			the_Purpose = Purpose_Activity_dao.update_purpose(Purpose);

 			log.info(" Object returned from update_purpose  service method !");
			return the_Purpose;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_purpose service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Purpose noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Purpose object will return
	*@throws Exception
	*/

	public Purpose purpose_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("purpose_search_for_update service operation started !");

		try{
			Purpose the_Purpose;

			the_Purpose = Purpose_Activity_dao.purpose_search_for_update(id);

 			log.info(" Object returned from purpose_search_for_update  service method !");
			return the_Purpose;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("purpose_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Purpose noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Purpose id deleted based on id
	*@throws Exception
	*/

	public String  delete_purpose(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_purpose service operation started !");

		try{
			String method_return_message;

			method_return_message = Purpose_Activity_dao.delete_purpose(id);

 			log.info(" Object returned from delete_purpose  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_purpose service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Purpose noun from  database
	*
	*
	*@return List of Purpose object will return
	*@throws Exception
	*/

	public ArrayList<Purpose> get_all_purpose() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Purpose> Purpose_list;

			Purpose_list = Purpose_Activity_dao.get_all_purpose();

 			log.info(" Object returned from   service method !");
			return Purpose_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}