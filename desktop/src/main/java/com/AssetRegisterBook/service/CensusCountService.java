package com.AssetRegisterBook.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.AssetRegisterBook.domain.core.CensusCount;

import com.AssetRegisterBook.dao.couchbase.CensusCountDao;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("CensusCountService")
public class CensusCountService   {
private static Logger log = Logger.getLogger(CensusCountService.class.getName());

	private CensusCountDao CensusCount_dao;


	public CensusCountDao get_CensusCount_dao() {
		return CensusCount_dao;
	}


	@Resource(name="CensusCountDao")
	public void set_CensusCount_dao(CensusCountDao CensusCount_dao) {
		this.CensusCount_dao = CensusCount_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  CensusCount noun into database
	*@param CensusCount
	*@param user
	*@return the_CensusCount object will return
	*@throws Exception
	*/

	public CensusCount create_censuscount(CensusCount CensusCount) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_censuscount service operation started !");

		try{
			CensusCount the_CensusCount;

			the_CensusCount = CensusCount_dao.create_censuscount(CensusCount);

 			log.info(" Object returned from create_censuscount  service method !");
			return the_CensusCount;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_censuscount service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  CensusCount noun into database
	*@param CensusCount
	*@param user
	*@return the_CensusCount object will return
	*@throws Exception
	*/

	public CensusCount update_censuscount(CensusCount CensusCount) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_censuscount service operation started !");

		try{
			CensusCount the_CensusCount;

			the_CensusCount = CensusCount_dao.update_censuscount(CensusCount);

 			log.info(" Object returned from update_censuscount  service method !");
			return the_CensusCount;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_censuscount service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  CensusCount noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_CensusCount object will return
	*@throws Exception
	*/

	public CensusCount censuscount_search_for_update(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("censuscount_search_for_update service operation started !");

		try{
			CensusCount the_CensusCount;

			the_CensusCount = CensusCount_dao.censuscount_search_for_update(id);

 			log.info(" Object returned from censuscount_search_for_update  service method !");
			return the_CensusCount;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("censuscount_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  CensusCount noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_CensusCount id deleted based on id
	*@throws Exception
	*/

	public String  delete_censuscount(String id ) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_censuscount service operation started !");

		try{
			String method_return_message;

			method_return_message = CensusCount_dao.delete_censuscount(id);

 			log.info(" Object returned from delete_censuscount  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_censuscount service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  CensusCount noun from  database
	*
	*
	*@return List of CensusCount object will return
	*@throws Exception
	*/

	public ArrayList<CensusCount> get_all_censuscount() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<CensusCount> CensusCount_list;

			CensusCount_list = CensusCount_dao.get_all_censuscount();

 			log.info(" Object returned from   service method !");
			return CensusCount_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}